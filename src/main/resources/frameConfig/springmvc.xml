<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

    <!-- spring可以自动去扫描base-pack下面的包或者子包下面的java文件，
    	如果扫描到有Spring的相关注解的类，则把这些类注册为Spring的bean -->
    <context:component-scan base-package="cn.zjz.ssm.controller">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- 使用controller注解 -->
   <!-- <mvc:annotation-driven/>-->

    <!-- 对静态资源不拦截
    相当于注册了DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter两个bean，
    配置一些messageconverter。即解决了@Controller注解的使用前提配置。
    要使用spring mvc中的@Controller注解，就必须要配置<mvc:annotation-driven />
    否则org.springframework.web.servlet.DispatcherServlet无法找到控制器并把请求分发到控制器。
    -->
    <!-- 使用默认的Servlet来响应静态文件 -->
    <mvc:default-servlet-handler/>

    <!-- 配置视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="suffix" value=".jsp"></property>
        <property name="prefix" value="/WEB-INF/jsp/"></property>
    </bean>

    <!-- 设置配置方案 -->
   <!-- <mvc:annotation-driven>
        &lt;!&ndash; 设置不使用默认的消息转换器 &ndash;&gt;
        <mvc:message-converters register-defaults="false">
            &lt;!&ndash; 配置Spring的转换器 &ndash;&gt;
            <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.BufferedImageHttpMessageConverter"/>
            &lt;!&ndash; 配置fastjson中实现HttpMessageConverter接口的转换器 &ndash;&gt;
            <bean id="fastJsonHttpMessageConverter"
                  class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                &lt;!&ndash; 加入支持的媒体类型：返回contentType &ndash;&gt;
                <property name="supportedMediaTypes">
                    <list>
                        &lt;!&ndash; 这里顺序不能反，一定先写text/html,不然ie下会出现下载提示 &ndash;&gt;
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>-->

    <mvc:annotation-driven>
        <!-- 设置不使用默认的消息转换器 -->
        <mvc:message-converters register-defaults="false" >
            <!-- 配置Spring的转换器 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.BufferedImageHttpMessageConverter"/>
            <ref bean="fastJsonHttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 配置fastjson中实现HttpMessageConverter接口的转换器 -->
    <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
        <!-- 加入支持的媒体类型：返回contentType -->
        <property name="supportedMediaTypes">
            <list>
                <!-- 这里顺序不能反，一定先写text/html,不然ie下会出现下载提示 -->
                <value> text/html; charset=UTF-8</value>
                <value> application/json; charset=UTF-8</value>
            </list>
        </property>
    </bean>
</beans>